モデリングとお富士さん
羽生田栄一＠HHany が
ハッカーにはなれないソフトウェアエンジニアの卵に
贈りたい1冊

わたしはプログラミングは嫌いではありませんが、学生時代から今まで数々のハッカーと呼ばれる超絶的なプログラマーの人達を横から見てきて、自分はまったく叶わない、別次元のレベルの存在を知ってしまい、挫折感を味わうとともに、自分の得意な部分で生きていこうと作戦を練りました。そんなときに出会ったのが、1980年代前半当時刊行が始まった木村泉・米澤明憲の両先生共著の『算法表現論』です。

この本は「ソフトウェアをどう書くべきか」をできるだけ理論的・体系的に整理した本なのです。ところが、その構成を見ると驚かされます。第1章が木村先生単独執筆で、「序論――アルゴリズムにおける具体と抽象」というお題で、この本全体の言わんとする事のエッセンスをまったく理論的なむずかしい言葉を使わずに木村流ストーリーテリングとしてソフトウェア「物語」として要約しているのです。そして後半の第2章から20章までは、当時の峻英の米澤先生がソフトウェアの基礎を数学的・理論的に明らかにするものでした。そこでは、作用的算法すなわち関数型言語の基礎、命令的算法すなわち手続き型言語の基礎、データ構造・制御構造の抽象化、非決定性と並列性の表現、と解説を進めてきて、最後に、これからのソフトウェアに対する「アクターによる統一モデル」（これが当時まだほとんどの人が耳にしたことの無かったオブジェクト指向の理論的基礎です）が奥ゆかしくも高らかに提示されていたのです。そして、この1章序論と後半の理論編の大きな乖離から私は３つのことを学んだのです。

第1に、オブジェクト指向、アクター理論の大きな可能性、展望を切り開く力に目を開かれました。

第2に、理論的な基礎の重要性です。数学的なことは苦手という人も多いと思いますが、対象を概念的・抽象的に捉えて重要な部分を的確に表現するお手本としていつも意識しておくのがよいと思います。

第3に、「物語」の力、モデル化の力です。抽象化の概念形成史、身体感覚との擦り合わせで、ハッカーに張り合うための作戦はどうなったかというと、プログラムというコンピュータ『コード』とは別の視点でそのシステムの対象領域を『物語』としてモデル化する努力をするということでした。そこからオブジェクト指向モデリングやユースケースやパターンランゲージによるユーザー世界の記述、ワークショップスタイルの要求開発という大きな仕事に繋げていく糸口を手に入れることができたのです。

そして言い忘れましたが、第4の影響は、神社と併せてお富士さん巡りを趣味とするようになったことでしょうか。先日も大田区の羽田神社、穴守稲荷のお富士さんを体験してきました。

以上
